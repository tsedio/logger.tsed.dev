import{_ as i}from"./chunks/theme.B2ONUecK.js";import{c as t,j as a,G as e,af as n,o as l}from"./chunks/framework.JWorlyEv.js";const o={class:"flex space-x-3"},c=JSON.parse('{"title":"","description":"","frontmatter":{"meta":[{"name":"keywords","description":"api typescript node.js documentation PatternLayout class"}]},"headers":[],"relativePath":"api/logger/types/common/layouts/components/class-pattern-layout.md","filePath":"api/logger/types/common/layouts/components/class-pattern-layout.md","lastUpdated":null}'),p={name:"api/logger/types/common/layouts/components/class-pattern-layout.md"},g=Object.assign(p,{setup(r){return(h,s)=>(l(),t("div",null,[a("div",o,[e(i,{type:"class",class:"mt-3"}),s[0]||(s[0]=a("div",null,[a("h1",null,"PatternLayout"),a("div",{class:"module-name"},"@tsed/logger")],-1))]),s[1]||(s[1]=n(`<h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { PatternLayout } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@tsed/logger&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><blockquote><p>See <a href="https://github.com/tsedio/logger/blob/v7.0.1/packages/logger/src/types/common/layouts/components/PatternLayout.ts#L0-L0" target="_blank" rel="noreferrer">/packages/logger/src/types/common/layouts/components/PatternLayout.ts</a>.</p></blockquote><h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PatternLayout</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BaseLayout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    static</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> LayoutReplacer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">config</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BasicLayoutConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">loggingEvent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> LogEvent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">timezoneOffset</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="description" tabindex="-1">Description <a class="header-anchor" href="#description" aria-label="Permalink to &quot;Description&quot;">​</a></h2><p>PatternLayout Format for specifiers is %[padding].[truncation][field]{[format]} e.g. %5.10p - left pad the log level by 5 characters, up to a max of 10 Fields can be any of:</p><ul><li>%r time in toLocaleTimeString format</li><li>%p log level</li><li>%c log category</li><li>%h hostname</li><li>%m log data</li><li>%j log data as JSON</li><li>%d date in constious formats</li><li>%% %</li><li>%n newline</li><li>%z pid</li><li>%x{[tokenname]} add dynamic tokens to your log. Tokens are specified in the tokens parameter You can use %[ and %] to define a colored block.</li></ul><p>Tokens are specified as simple key:value objects. The key represents the token name whereas the value can be a string or function which is called to extract the value to put in the log message. If token is not found, it doesn&#39;t replace the field.</p><p>A sample token would be: { &#39;pid&#39; : function() { return process.pid; } }</p><p>Takes a pattern string, array of tokens and returns a layouts function.</p><h2 id="static-layoutreplacer" tabindex="-1">static LayoutReplacer <a class="header-anchor" href="#static-layoutreplacer" aria-label="Permalink to &quot;static LayoutReplacer&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">static </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">LayoutReplacer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: any;</span></span></code></pre></div><h2 id="transform" tabindex="-1">transform <a class="header-anchor" href="#transform" aria-label="Permalink to &quot;transform&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">transform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(loggingEvent: LogEvent, timezoneOffset</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> number): string;</span></span></code></pre></div>`,15))]))}});export{c as __pageData,g as default};
