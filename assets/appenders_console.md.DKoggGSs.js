import{_ as e,c as a,af as i,o as t}from"./chunks/framework.JWorlyEv.js";const k=JSON.parse('{"title":"Console Appender","description":"","frontmatter":{},"headers":[],"relativePath":"appenders/console.md","filePath":"appenders/console.md","lastUpdated":1733043293000}'),n={name:"appenders/console.md"};function o(l,s,p,r,h,d){return t(),a("div",null,s[0]||(s[0]=[i(`<h1 id="console-appender" tabindex="-1">Console Appender <a class="header-anchor" href="#console-appender" aria-label="Permalink to &quot;Console Appender&quot;">​</a></h1><p>This appender uses node’s console object to write log events. Be aware that writing a high volume of output to the console can make your application use a lot of memory. If you experience this problem, try switching to the <a href="/appenders/stdout.html"><code>stdout</code></a> appender.</p><h2 id="configuration" tabindex="-1">Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;">​</a></h2><p>type - <code>console</code> layout - object (optional, defaults to <a href="/layouts/colored.html"><code>coloredLayout</code></a>) - see <a href="/layouts/">layouts</a></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Note that all log events are output using <code>console.log</code> regardless of the event&#39;s level (so <code>ERROR</code> events will not be logged using <code>console.error</code>).</p></div><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {Logger} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@tsed/logger&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> logger</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Logger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;loggerName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logger.appenders.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;console-log&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;console&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div>`,7)]))}const g=e(n,[["render",o]]);export{k as __pageData,g as default};
